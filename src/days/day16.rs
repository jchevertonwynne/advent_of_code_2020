use std::collections::{HashMap, HashSet};
use std::time::{Duration, Instant};

const INPUT: &str = include_str!("../../files/16.txt");

#[derive(Debug)]
struct Range {
    min: usize,
    max: usize,
}

#[derive(Debug)]
struct Row<'a> {
    name: &'a str,
    a: Range,
    b: Range,
}

type Ticket = Vec<usize>;

impl Range {
    fn valid(&self, val: usize) -> bool {
        self.min <= val && val <= self.max
    }
}

impl Row<'_> {
    fn valid(&self, val: usize) -> bool {
        self.a.valid(val) || self.b.valid(val)
    }
}

fn load_tickets(input: &str) -> (Vec<Row>, Ticket, Vec<Ticket>) {
    let mut input = input.split('\n');

    let rows = (0..20)
        .map(|_| {
            let row = input.next().expect("pls");
            let colon = row.find(':').expect("should have colon");
            let name = &row[..colon];
            let nums = &row[colon + 2..];
            let or = nums.find(' ').expect("should have spaces");
            let first_nums = &nums[..or];
            let second_nums = &nums[or + 4..];
            let hypa = first_nums.find('-').expect("should be hyphen seperated");
            let mina = first_nums[..hypa].parse::<usize>().expect("shoud be int");
            let maxa = first_nums[hypa + 1..]
                .parse::<usize>()
                .expect("shoud be int");
            let hypb = second_nums.find('-').expect("should be hyphen seperated");
            let minb = second_nums[..hypb].parse::<usize>().expect("shoud be int");
            let maxb = second_nums[hypb + 1..]
                .parse::<usize>()
                .expect("shoud be int");
            Row {
                name,
                a: Range {
                    min: mina,
                    max: maxa,
                },
                b: Range {
                    min: minb,
                    max: maxb,
                },
            }
        })
        .collect();

    let mut input = input.skip(2);

    let ticket = input
        .next()
        .expect("should exist in input")
        .split(',')
        .map(|v| v.parse().expect("should be valid int"))
        .collect::<Vec<_>>();

    input.next();
    input.next();

    let tickets = input
        .map(|t| {
            t.split(',')
                .map(|v| v.parse().expect("should be valid int"))
                .collect()
        })
        .collect();

    (rows, ticket, tickets)
}

fn part1<'a>(rows: &[Row], tickets: &'a [Ticket]) -> (usize, Vec<&'a Ticket>) {
    let mut valid = Vec::new();
    let mut res = 0;

    for ticket in tickets {
        let mut v = true;
        for &field in ticket {
            if !rows.iter().any(|r| r.valid(field)) {
                res += field;
                v = false
            }
        }
        if v {
            valid.push(ticket);
        }
    }

    (res, valid)
}

fn reduce_to_unique<'a>(rows: &'a [Row], tickets: &'_ [&Ticket]) -> Vec<&'a str> {
    let mut fixing_possibilities = HashMap::new();

    for row in rows {
        let entry = fixing_possibilities
            .entry(row.name)
            .or_insert_with(HashSet::new);

        for i in 0..tickets[0].len() {
            if tickets.iter().all(|t| row.valid(t[i])) {
                entry.insert(i);
            }
        }
    }

    let mut fixed: HashMap<usize, &str> = HashMap::new();

    while !fixing_possibilities.is_empty() {
        let singulars = fixing_possibilities
            .iter_mut()
            .filter_map(|(k, v)| {
                if v.len() == 1 {
                    let index = *v.iter().next().expect("should have one value");
                    Some((*k, index))
                } else {
                    None
                }
            })
            .collect::<Vec<_>>();
        for (label, index) in singulars {
            fixing_possibilities.remove(label);
            for possibilities in fixing_possibilities.values_mut() {
                possibilities.remove(&index);
            }
            fixed.insert(index, label);
        }
    }

    (0..rows.len())
        .map(|i| *fixed.get(&i).expect("exist"))
        .collect()
}

fn part2(rows: &[Row], valid: &[&Ticket], ticket: Ticket) -> usize {
    let keys = reduce_to_unique(rows, &valid);

    keys.iter()
        .zip(ticket.iter())
        .filter_map(|(k, v)| {
            if k.starts_with("departure") {
                Some(v)
            } else {
                None
            }
        })
        .product()
}

pub fn run() -> (String, String, Duration) {
    let start = Instant::now();

    let (rows, ticket, tickets) = load_tickets(INPUT);
    let (p1, valid) = part1(&rows, &tickets);
    let p2 = part2(&rows, &valid, ticket);

    (p1.to_string(), p2.to_string(), start.elapsed())
}

#[cfg(test)]
mod tests {
    use crate::days::day16::{load_tickets, part1, part2, reduce_to_unique, Range, Row};

    #[test]
    fn test_part1() {
        let rows = vec![
            Row {
                name: "class",
                a: Range { min: 1, max: 3 },
                b: Range { min: 5, max: 7 },
            },
            Row {
                name: "row",
                a: Range { min: 6, max: 11 },
                b: Range { min: 33, max: 44 },
            },
            Row {
                name: "seat",
                a: Range { min: 13, max: 40 },
                b: Range { min: 45, max: 50 },
            },
        ];

        let tickets = vec![
            vec![7, 3, 47],
            vec![40, 4, 50],
            vec![55, 2, 20],
            vec![38, 6, 12],
        ];

        assert_eq!(part1(&rows, &tickets), (71, vec![&vec![7, 3, 47]]));
    }
    #[test]
    fn test_generation() {
        let rows = vec![
            Row {
                name: "class",
                a: Range { min: 0, max: 1 },
                b: Range { min: 4, max: 19 },
            },
            Row {
                name: "row",
                a: Range { min: 0, max: 5 },
                b: Range { min: 8, max: 19 },
            },
            Row {
                name: "seat",
                a: Range { min: 0, max: 13 },
                b: Range { min: 16, max: 19 },
            },
        ];

        let tickets = vec![vec![3, 9, 18], vec![15, 1, 5], vec![5, 14, 9]];

        reduce_to_unique(&rows, &(tickets.iter().collect::<Vec<_>>()));
    }

    #[test]
    fn test_hamzaan() {
        let s = "departure location: 28-787 or 804-964
departure station: 41-578 or 594-962
departure platform: 50-718 or 733-949
departure track: 27-846 or 862-949
departure date: 50-241 or 249-957
departure time: 44-81 or 104-972
arrival location: 45-292 or 299-954
arrival station: 46-650 or 657-974
arrival platform: 42-396 or 405-953
arrival track: 42-871 or 886-973
class: 31-808 or 829-964
duration: 39-909 or 935-969
price: 49-350 or 364-970
route: 44-251 or 264-959
row: 50-539 or 556-952
seat: 45-624 or 630-951
train: 28-283 or 290-960
type: 44-334 or 340-951
wagon: 43-699 or 716-961
zone: 42-668 or 688-958

your ticket:
131,67,137,61,149,107,109,79,71,127,173,157,167,139,151,163,59,53,113,73

nearby tickets:
436,66,560,233,594,569,437,864,15,350,199,146,265,166,666,490,494,689,170,869
744,207,488,829,776,123,949,327,308,219,624,600,337,197,941,502,305,659,77,63
941,201,228,759,490,232,469,631,660,305,562,339,237,185,290,123,411,536,64,772
155,204,699,517,689,940,520,700,756,329,459,690,843,901,534,662,416,212,483,868
715,465,463,519,304,133,561,309,216,367,440,239,899,78,602,566,453,535,487,482
898,250,181,392,176,977,666,160,603,754,941,524,304,501,107,640,495,649,309,899
936,143,507,778,162,652,134,520,316,523,316,393,769,405,458,195,620,832,161,611
843,500,66,657,278,414,313,676,280,483,431,841,442,868,204,632,159,427,690,445
764,303,208,865,127,832,533,758,508,518,14,173,473,227,194,424,344,835,325,606
540,487,392,468,309,632,905,425,534,274,634,866,749,174,734,642,125,600,529,366
640,57,896,574,646,170,688,597,384,312,193,273,724,315,938,440,207,63,425,201
212,468,410,429,232,867,527,875,386,185,199,871,78,487,310,465,506,786,693,241
161,863,209,420,904,771,864,227,761,220,537,623,287,366,161,507,443,251,832,693
202,446,491,835,222,377,377,603,578,787,376,441,342,891,67,628,862,160,129,717
521,208,909,490,806,492,733,750,507,472,314,353,212,473,571,81,50,612,304,157
178,708,525,140,438,772,165,560,158,365,64,382,783,321,514,186,251,568,439,658
319,697,507,238,316,55,668,629,667,80,663,368,772,214,76,439,949,133,311,452
51,190,433,337,370,830,450,344,72,178,227,899,649,889,690,178,638,769,613,598
895,460,557,769,936,386,743,418,528,845,661,791,737,863,507,129,179,532,935,737
464,269,472,426,617,169,613,179,189,113,457,564,120,287,843,347,835,274,305,741
181,528,250,907,189,498,599,309,155,840,198,741,769,132,159,336,210,223,164,537
288,434,171,643,80,577,606,513,61,329,459,631,113,594,193,618,430,909,617,409
189,178,281,329,300,612,613,566,532,434,79,887,322,935,518,427,487,5,907,904
177,311,995,775,535,695,371,162,504,948,753,370,776,182,267,407,136,765,948,342
737,420,898,875,118,764,574,374,233,52,612,186,534,462,836,272,172,193,471,160
797,227,198,237,203,182,481,320,765,600,558,439,428,78,364,382,235,69,835,454
447,385,322,132,299,429,829,484,865,529,519,845,938,340,201,65,886,471,785,288
942,448,611,434,479,280,841,537,894,427,237,656,889,665,661,662,907,525,221,768
303,437,386,276,867,559,71,114,347,185,572,578,881,196,595,366,279,465,762,225
51,114,176,557,692,466,54,779,234,435,130,535,637,654,480,614,179,468,557,70
535,717,599,490,632,371,178,458,138,499,207,574,507,115,656,741,636,434,370,845
388,573,617,440,218,564,862,532,764,377,691,499,126,728,140,438,616,668,50,431
440,519,944,6,516,524,137,76,496,272,307,611,906,782,946,127,735,482,567,376
738,149,775,769,529,748,759,536,694,447,443,126,852,105,139,312,830,345,434,79
184,689,766,273,51,547,758,607,772,531,380,149,349,318,232,184,408,387,485,323
130,694,234,184,184,493,901,343,17,637,634,646,318,110,161,219,512,696,738,510
659,939,577,158,291,136,560,291,279,642,182,489,121,183,869,705,151,750,733,274
485,470,412,644,514,866,462,381,277,267,132,488,419,625,607,196,639,771,528,782
558,844,893,653,137,234,406,535,145,429,516,388,473,748,509,314,451,420,334,806
830,203,407,482,768,319,476,886,327,378,439,173,81,601,214,743,60,57,398,494
132,171,67,240,74,908,770,621,318,52,562,201,920,190,312,942,478,120,221,461
404,233,623,475,220,498,140,187,344,184,127,232,78,841,696,195,538,138,597,225
485,308,624,840,944,641,773,517,526,388,775,184,842,290,617,788,465,475,597,772
127,76,125,462,837,616,391,348,208,648,512,510,176,180,338,761,347,488,742,642
668,235,183,186,745,836,718,624,239,224,228,757,56,801,634,217,787,343,63,762
566,62,367,789,79,664,660,500,155,309,742,236,808,600,428,936,280,190,216,313
561,694,449,280,662,609,513,566,769,185,57,429,655,300,148,903,452,64,900,536
172,159,434,142,191,212,868,604,344,367,495,392,126,167,181,676,534,169,487,863
770,61,942,159,427,334,908,233,626,470,736,302,466,516,568,611,897,320,301,657
133,234,161,388,564,866,531,458,136,438,111,778,320,634,323,113,223,505,331,548
376,648,236,322,871,516,304,405,209,121,641,868,375,385,537,572,274,510,284,773
171,984,445,427,494,596,471,862,281,942,455,949,940,350,907,53,909,342,79,282
196,742,223,221,142,389,175,392,594,135,653,130,198,199,571,108,416,698,897,893
191,321,749,886,493,753,377,560,711,221,311,218,55,158,319,233,718,226,382,301
58,72,159,69,111,371,71,461,334,124,104,663,624,312,410,247,477,834,835,119
762,65,76,595,949,1,55,600,374,210,512,428,613,832,167,643,383,737,442,453
470,611,780,888,472,373,611,270,126,433,227,188,434,497,647,529,488,908,267,653
213,610,449,423,639,215,761,891,568,416,412,350,161,381,185,436,446,896,189,789
474,51,347,840,846,376,421,330,539,559,535,980,56,188,177,576,194,307,189,105
621,838,488,325,395,286,331,742,569,840,612,193,479,393,894,615,466,237,104,509
457,197,300,683,783,322,633,328,372,892,566,439,659,521,163,909,617,561,348,634
743,132,563,559,617,447,456,80,152,829,80,278,249,246,422,329,272,426,613,642
479,736,894,484,776,518,110,221,320,429,299,834,864,468,994,840,345,770,465,760
717,272,203,833,214,208,461,185,59,838,864,702,221,182,318,345,751,431,316,735
371,178,333,374,558,337,865,842,225,405,372,63,277,563,381,446,787,518,749,114
199,534,534,142,630,151,349,597,504,461,454,254,197,451,213,153,746,114,186,575
639,431,938,241,904,760,834,479,464,151,67,693,716,101,170,509,438,570,104,601
470,429,303,184,139,136,888,789,267,182,562,311,660,898,119,573,115,501,272,694
939,832,492,943,61,615,526,423,560,769,718,998,160,76,504,141,136,771,445,739
290,905,292,509,568,513,506,467,498,120,395,59,640,373,192,787,939,195,116,673
638,862,697,235,374,567,405,643,906,421,447,111,427,335,777,605,406,903,866,409
489,553,504,863,524,462,657,807,214,193,562,445,133,333,511,435,215,619,744,193
475,612,240,458,845,694,522,438,793,735,173,618,521,200,441,610,396,238,282,278
186,465,633,128,196,236,507,129,767,497,302,110,300,62,647,872,752,566,516,117
199,136,485,167,250,769,937,4,181,694,777,174,421,595,70,869,601,143,392,647
842,733,227,437,491,344,443,750,552,556,662,693,236,417,78,374,224,424,134,379
868,430,202,553,429,515,935,465,174,391,167,134,158,138,190,905,771,499,394,562
326,785,182,782,74,752,81,147,641,51,199,403,393,182,448,381,434,942,759,455
869,846,430,197,452,747,899,668,86,268,268,333,276,563,773,497,742,394,209,410
190,699,744,384,110,417,435,231,278,432,500,80,736,939,767,993,608,668,776,697
125,152,612,215,666,138,831,468,754,132,64,691,105,661,884,938,461,104,845,640
559,366,418,422,17,219,319,638,277,139,368,888,635,600,439,494,537,389,179,180
949,435,908,442,53,104,314,693,270,210,413,614,516,202,166,436,565,595,936,398
349,485,119,840,190,158,240,327,171,345,291,75,169,837,421,305,781,757,631,99
898,302,373,845,559,198,412,530,68,453,662,941,54,574,540,71,570,350,299,165
502,220,147,471,568,624,935,454,806,453,776,639,410,706,222,495,659,196,636,59
425,469,18,131,331,535,346,500,438,783,268,71,786,57,115,573,622,764,452,159
618,395,658,219,595,426,471,220,388,208,73,77,609,662,427,618,698,457,463,993
528,451,215,232,390,56,201,718,485,668,432,477,536,331,155,137,649,540,276,739
613,637,717,422,763,76,514,641,676,718,210,234,112,637,699,68,154,464,218,449
768,557,945,695,265,900,197,864,318,139,179,906,751,869,757,224,312,629,478,218
481,756,840,345,651,566,316,279,140,694,137,561,748,446,277,311,117,743,418,557
292,246,502,212,268,564,196,368,151,785,122,166,172,645,459,183,316,185,224,537
370,314,299,556,452,805,179,369,909,513,577,694,502,178,10,210,512,634,758,435
482,401,109,396,249,156,304,197,350,373,61,405,939,829,645,749,556,745,831,59
522,781,837,108,753,785,435,234,575,224,525,456,506,558,829,725,829,218,317,763
430,568,830,979,199,331,317,515,426,130,65,120,838,948,647,560,154,371,768,752
407,165,181,413,613,395,841,227,310,428,383,633,193,664,698,776,339,409,233,782
481,275,630,776,343,766,688,630,228,892,631,626,446,896,594,63,431,935,782,750
340,493,746,371,426,752,489,537,529,634,112,884,755,420,783,346,163,148,631,68
417,379,504,138,733,163,147,869,112,613,274,270,301,374,833,142,541,890,784,518
787,472,566,504,568,890,595,657,388,434,292,103,272,428,74,408,201,310,155,190
350,280,418,410,482,466,473,62,304,317,743,316,122,684,749,898,520,774,573,642
235,787,495,275,140,422,768,944,463,249,129,307,108,779,436,524,157,643,507,14
230,646,390,649,867,829,609,100,133,186,690,831,415,381,376,645,393,615,716,634
68,112,62,754,833,778,239,663,267,110,806,914,762,868,168,200,602,350,663,198
625,347,513,513,842,507,330,160,489,532,226,193,130,423,444,567,307,222,63,111
836,140,661,871,169,664,312,745,742,646,998,322,450,214,939,503,161,274,636,224
344,603,649,492,478,772,377,281,250,411,497,719,517,758,643,183,600,464,315,559
119,442,4,105,179,365,425,145,61,535,637,640,434,304,194,562,175,233,539,211
477,337,374,215,778,68,830,141,272,196,483,347,460,118,165,326,693,443,164,867
886,501,607,617,202,222,436,992,577,319,501,745,805,949,232,309,887,533,445,498
471,783,436,899,561,396,431,379,906,407,942,208,611,840,449,304,286,519,163,274
113,494,448,508,889,576,159,271,51,831,597,844,535,736,900,478,328,457,552,107
603,905,104,906,898,871,435,318,327,158,381,536,458,854,178,347,455,606,106,897
223,517,205,658,643,661,522,273,892,250,736,849,532,65,186,689,733,376,521,763
232,166,699,128,378,626,478,534,937,81,617,81,529,333,441,502,903,170,756,603
386,301,123,435,461,830,694,455,519,606,480,245,425,691,214,751,895,415,65,196
203,418,776,525,935,833,171,394,194,180,745,140,981,608,614,775,833,630,193,457
415,944,138,399,563,229,486,268,121,839,697,228,771,739,717,76,250,143,650,164
454,808,116,72,214,458,292,485,634,746,326,754,238,69,72,647,348,487,166,996
153,158,634,314,776,535,326,384,248,510,178,234,274,415,517,104,650,558,454,435
864,805,184,109,895,76,210,114,904,597,751,277,504,649,612,618,164,178,12,749
737,203,403,751,616,868,135,70,202,330,346,59,383,275,442,842,716,381,742,692
652,846,312,130,456,406,207,182,444,650,62,182,304,212,485,69,782,187,132,892
133,783,325,578,893,393,527,620,890,648,560,286,945,845,497,376,269,152,779,179
507,698,459,661,251,835,976,603,165,233,222,365,643,665,531,649,744,519,126,326
508,781,456,657,648,223,291,104,327,556,845,585,690,785,110,536,112,868,574,516
539,612,197,394,188,936,642,440,664,349,231,414,249,445,304,548,457,443,944,145
273,433,434,831,525,213,208,390,213,903,419,418,326,659,525,399,738,143,265,532
896,269,870,376,434,114,113,338,498,898,866,290,395,72,428,831,135,324,176,947
225,556,841,718,304,770,415,888,453,528,644,490,478,106,163,396,733,440,693,295
384,627,842,476,396,774,169,562,129,373,177,51,430,205,130,316,660,624,128,56
383,215,559,449,143,867,505,649,649,182,206,528,398,126,596,561,459,212,577,570
831,128,519,536,395,644,526,119,336,836,837,619,646,774,619,109,473,843,185,349
897,239,486,288,115,432,273,560,453,322,661,453,753,617,144,375,333,140,482,224
528,224,561,382,643,523,219,518,134,5,641,538,753,836,161,417,341,562,607,537
437,406,552,419,558,466,187,947,428,717,190,643,169,943,620,829,482,699,437,525
382,318,630,318,223,495,520,105,514,737,148,421,627,695,374,808,210,196,147,160
380,320,889,902,131,525,176,838,516,642,597,266,686,530,150,154,221,638,368,756
196,273,155,190,534,488,231,641,475,865,742,807,698,204,240,427,272,396,654,333
887,227,176,753,830,899,107,59,623,886,740,319,409,77,375,904,654,524,428,334
754,441,229,483,162,494,226,888,477,322,114,834,790,151,477,837,64,126,751,364
533,217,737,575,11,888,904,566,426,441,748,346,275,762,893,302,609,603,558,533
558,194,717,752,388,53,664,765,854,445,903,599,118,645,70,372,773,347,557,745
900,557,390,326,768,126,143,206,503,169,303,474,694,209,364,185,736,149,664,850
682,891,442,863,474,830,119,746,662,155,781,214,421,308,461,274,365,524,153,889
446,133,603,526,309,716,779,588,204,193,208,778,505,907,188,185,465,240,649,888
153,144,324,248,498,889,772,433,61,843,331,486,380,840,498,116,576,237,786,127
778,201,708,738,485,414,104,314,209,937,122,266,378,842,756,193,842,743,660,214
68,141,763,380,642,180,733,837,741,457,450,534,451,941,534,630,436,469,706,188
280,321,658,383,147,485,613,174,486,622,452,317,711,433,621,452,938,190,693,271
481,668,239,459,308,533,442,319,154,844,422,50,517,193,837,894,621,343,230,243
300,527,206,425,123,393,194,568,191,194,278,622,328,468,170,652,520,234,475,153
209,142,5,51,408,370,57,754,115,214,571,511,201,716,134,223,866,474,408,697
885,277,513,513,106,410,753,866,56,906,426,478,949,328,439,64,378,197,765,762
557,576,230,323,227,484,608,404,455,343,570,947,163,321,155,738,349,277,172,495
302,636,617,623,649,421,70,115,497,303,601,782,216,499,479,297,173,151,604,632
844,442,307,142,54,459,601,510,754,327,219,750,114,935,739,86,636,804,236,181
385,895,761,840,144,787,349,134,122,347,55,836,202,386,131,176,807,227,808,921
414,326,457,781,946,787,224,517,426,307,597,185,444,241,196,903,211,240,445,363
435,644,227,640,937,409,527,936,395,157,846,688,611,166,148,484,890,837,625,163
411,62,612,448,154,276,117,243,66,304,657,571,805,396,606,469,429,280,150,322
106,608,786,320,521,229,227,780,188,599,273,425,389,153,410,804,330,412,128,721
54,935,207,830,697,985,596,120,200,143,564,340,375,841,831,894,842,521,531,691
570,8,646,342,890,939,451,312,805,624,292,908,772,462,454,698,313,568,898,638
138,241,61,124,524,436,109,559,586,411,642,310,386,81,639,170,220,320,862,389
462,472,504,909,689,428,449,633,438,755,576,698,519,404,774,506,365,310,898,179
621,173,315,321,299,174,444,379,619,311,197,431,422,940,179,10,539,206,619,630
773,688,665,323,366,323,785,368,438,329,157,217,600,657,365,286,907,166,534,165
565,393,431,864,288,775,63,528,72,760,142,598,161,465,389,241,210,489,535,231
846,148,153,345,306,747,422,831,560,380,938,460,758,839,130,847,108,783,537,612
246,122,767,806,424,769,314,522,273,166,839,575,182,194,760,617,480,168,604,487
562,878,786,217,271,772,137,63,267,177,408,427,116,215,176,862,787,432,775,395
867,534,55,741,234,689,419,416,639,603,566,684,606,947,221,140,162,568,435,865
481,166,382,489,364,187,612,469,807,159,491,221,18,71,558,599,266,445,189,373
839,535,338,787,68,269,142,649,415,666,604,189,303,521,396,167,320,65,780,232
787,381,210,146,406,387,119,1,946,631,635,67,495,846,641,125,747,418,559,126
396,396,311,418,434,695,844,427,388,629,304,140,228,496,239,465,449,59,130,459
210,762,161,745,829,690,169,976,237,105,532,427,576,889,341,695,375,890,230,622
205,346,438,870,894,601,761,412,455,613,936,324,456,178,492,279,14,409,236,328
487,463,842,750,840,186,222,461,289,280,72,699,538,521,224,419,780,191,367,898
139,187,389,643,349,502,300,367,561,130,186,345,143,137,739,756,77,129,601,628
349,678,188,752,156,225,463,188,278,949,457,375,808,67,905,497,328,488,782,769
77,418,829,134,532,445,276,535,650,698,322,181,496,393,139,931,865,458,148,453
772,224,886,597,752,778,330,525,652,157,290,946,62,773,608,490,179,124,249,164
901,213,286,411,305,392,909,158,139,642,392,304,175,529,125,473,578,569,740,315
147,464,371,159,508,154,571,523,518,534,210,456,77,864,710,717,893,172,424,81
782,125,55,182,631,523,481,556,174,107,369,130,53,328,530,580,104,180,135,451
829,284,330,739,659,81,148,508,179,699,467,372,414,945,527,472,72,633,467,159
218,563,469,976,306,320,838,604,241,769,940,317,383,443,805,455,618,128,645,488
112,213,147,870,743,397,118,616,666,717,453,557,73,174,522,69,556,869,558,317
893,323,841,333,109,638,140,527,665,493,210,295,390,199,328,346,408,610,150,126
597,462,312,704,180,429,482,479,374,534,409,773,505,527,186,348,764,115,688,280
900,943,941,470,484,385,532,618,224,523,753,594,621,602,681,528,455,229,448,898
109,808,741,275,606,744,634,459,474,10,108,383,425,845,739,52,484,124,938,183
165,488,740,429,503,113,620,60,304,514,834,73,76,324,168,141,532,718,318,713
515,761,560,561,371,505,188,617,833,420,753,177,869,884,183,527,165,130,518,909
619,77,573,306,515,306,157,945,239,305,665,836,428,442,394,440,201,866,684,116
808,763,568,507,149,434,503,164,112,75,939,775,145,448,844,21,468,444,496,889
980,524,175,500,233,416,151,864,110,203,936,415,74,616,479,691,617,470,842,639
483,308,315,20,577,209,864,567,569,780,201,716,892,766,869,557,602,907,224,632
585,212,382,778,605,846,602,364,220,251,113,745,511,767,522,146,237,105,750,528
977,180,597,938,81,668,171,778,436,304,199,197,718,864,466,609,716,347,605,348
576,938,215,381,483,350,160,772,131,182,126,831,248,306,622,599,520,416,504,201
648,754,640,159,76,396,753,56,111,690,644,108,588,372,439,665,635,509,80,203
203,807,844,190,317,949,639,654,735,603,603,490,413,604,377,315,370,327,779,127
573,482,656,492,241,417,325,126,806,165,407,890,753,617,347,372,165,236,869,596
907,64,218,516,366,840,233,291,892,122,575,6,424,187,482,665,616,510,232,531
325,806,514,395,475,532,209,412,483,391,480,554,939,607,224,153,602,124,894,119
832,234,384,318,449,980,374,330,221,659,598,235,408,74,906,50,436,718,647,569
179,749,599,150,759,350,75,59,405,568,476,866,757,505,689,230,600,285,641,668
389,510,565,75,264,452,463,537,53,650,526,54,450,59,629,377,81,62,466,746
235,764,889,230,148,935,517,893,717,832,808,754,346,444,907,648,450,890,407,984
427,377,486,453,71,115,567,524,777,529,279,762,544,667,623,290,207,688,571,181
334,388,472,470,277,217,485,549,894,945,612,573,597,768,438,774,435,128,500,305
986,141,211,116,213,302,534,300,598,777,171,841,444,128,183,76,122,131,325,447
904,807,782,62,215,119,442,395,229,52,160,641,185,249,602,772,627,236,482,448
18,69,835,599,760,111,784,109,660,782,937,328,125,126,281,198,766,128,417,176
226,59,511,514,665,643,120,689,517,331,556,411,424,427,935,164,426,275,194,584
300,140,127,746,595,390,502,512,274,69,520,463,170,207,742,188,375,944,127,339
657,479,173,329,126,112,266,808,575,203,176,316,947,270,218,481,978,768,423,563
202,429,520,643,471,778,369,211,125,285,292,207,736,606,774,162,396,696,427,693
320,233,870,887,501,168,13,299,778,110,646,533,477,154,457,474,317,457,128,751
338,783,162,199,755,420,436,838,890,223,378,603,290,907,181,506,301,635,889,205
846,129,187,232,313,756,524,63,610,393,431,60,196,638,539,482,617,805,782,882
449,774,650,625,484,471,806,304,456,443,70,907,904,394,716,267,619,603,236,641
835,300,278,444,54,783,450,144,516,390,718,777,84,528,61,200,766,348,662,173
79,652,480,558,210,649,421,212,736,232,350,329,444,624,768,835,111,146,770,602
778,892,327,612,213,909,458,697,402,127,163,846,488,892,735,459,889,769,482,869
596,223,62,412,396,319,533,745,473,321,642,563,576,543,694,78,188,374,290,279
868,557,782,570,870,463,433,659,785,567,630,441,862,659,446,348,201,65,336,341
463,835,138,829,940,474,473,344,210,568,436,113,834,316,427,124,620,656,313,578
60,414,625,415,608,106,453,620,408,598,832,690,331,63,607,457,364,182,539,838
667,438,458,81,202,487,80,288,413,494,452,609,326,565,409,283,907,467,514,647
893,319,561,225,490,943,658,394,129,465,417,459,563,579,836,164,265,323,312,942
264,308,375,833,539,411,561,66,292,564,121,383,203,870,403,405,207,774,832,442
438,71,218,766,454,505,504,116,890,619,995,316,771,763,364,373,767,480,439,660
475,322,522,173,215,485,311,151,532,655,735,59,173,689,434,106,425,478,139,189
269,382,107,487,233,532,58,471,787,69,216,895,596,314,284,194,662,842,52,839
192,506,574,77,64,575,275,445,885,315,643,223,380,59,770,232,574,376,127,381
198,890,449,749,80,275,114,305,131,754,943,150,211,140,561,761,58,4,158,210";
        let (rows, ticket, tickets) = load_tickets(s);

        let (_, valid) = part1(&rows, &tickets);
        let res = part2(&rows, &valid, ticket);
        println!("{}", res);
    }

    #[test]
    fn test_reddit() {
        let s = "departure location: 42-570 or 579-960
departure station: 45-101 or 118-967
departure platform: 36-374 or 394-958
departure track: 48-212 or 233-950
departure date: 41-481 or 492-953
departure time: 38-266 or 274-955
arrival location: 32-560 or 567-951
arrival station: 44-738 or 762-970
arrival platform: 40-675 or 685-949
arrival track: 25-320 or 344-954
class: 32-806 or 815-959
duration: 38-121 or 129-958
price: 35-692 or 706-957
route: 36-890 or 901-951
row: 35-282 or 288-964
seat: 35-445 or 469-954
train: 45-294 or 317-968
type: 44-240 or 265-960
wagon: 32-816 or 825-971
zone: 30-629 or 637-968

your ticket:
79,149,97,163,59,151,101,89,173,139,167,61,73,71,137,53,83,157,131,67

nearby tickets:
945,134,238,221,801,428,519,660,523,537,481,156,845,873,52,172,918,179,188,77
689,374,471,415,317,722,768,556,557,526,812,508,673,350,481,525,915,788,374,655
350,537,762,88,926,71,629,611,356,515,413,947,935,826,770,487,358,716,688,907
767,512,167,728,581,539,819,427,869,709,936,841,275,765,419,275,75,147,790,780
662,791,783,858,920,77,924,627,151,349,131,130,880,191,816,357,675,69,51,756
132,688,724,792,164,372,654,351,504,994,430,50,865,279,621,425,266,142,469,606
267,66,827,164,121,164,511,407,685,712,733,184,64,688,430,440,146,397,873,600
569,938,841,511,541,546,144,274,708,165,856,280,52,435,428,370,397,868,483,720
906,890,180,511,758,879,211,844,470,203,198,365,82,407,675,437,717,211,689,521
140,783,88,234,485,238,71,504,436,84,877,475,627,280,512,816,553,775,437,606
534,802,823,72,816,545,673,354,541,622,154,92,199,290,639,81,905,345,514,598
166,431,568,624,602,477,715,97,101,611,479,598,772,613,727,443,617,277,471,383
240,723,134,540,519,194,935,78,501,130,236,238,586,805,596,103,675,208,649,620
443,838,591,546,398,91,848,911,522,186,194,864,929,348,206,550,528,177,782,303
274,194,556,885,400,274,780,135,568,153,823,923,472,281,883,438,604,554,162,919
637,159,162,53,206,625,473,14,509,721,624,75,68,780,506,539,239,202,606,686
657,346,600,475,107,794,187,945,76,238,669,771,762,240,762,938,773,832,533,609
396,96,830,175,783,406,439,867,355,437,230,646,706,97,641,598,595,710,171,495
60,361,592,159,501,797,829,866,837,292,129,582,606,521,177,836,442,284,552,186
367,219,665,440,139,79,282,82,639,167,939,864,620,852,672,179,366,873,879,722
882,627,659,512,544,576,568,531,168,145,477,236,56,841,945,663,930,199,921,837
163,494,941,848,733,659,658,829,778,796,337,706,476,238,834,524,288,881,870,508
363,721,826,797,784,152,644,510,670,478,655,406,594,199,706,405,612,296,604,514
527,524,707,532,737,683,671,353,587,629,707,690,709,156,527,738,289,674,504,906
819,557,146,199,171,406,785,788,131,208,931,56,947,940,319,169,399,367,240,685
889,803,875,179,787,762,470,686,147,612,638,235,729,147,859,851,601,831,982,507
842,187,440,913,480,849,531,432,400,828,470,834,205,409,175,363,183,663,817,715
673,140,475,441,492,403,504,94,944,659,67,542,776,998,792,205,373,348,850,786
61,274,773,176,686,553,539,183,530,285,842,370,660,84,72,910,238,854,707,83
519,76,170,610,837,519,90,651,427,516,471,235,823,919,863,318,292,288,865,850
769,613,843,94,655,825,545,768,800,917,514,847,445,201,530,869,914,495,568,898
535,783,164,421,363,912,194,667,425,592,167,76,410,296,79,517,774,173,504,62
942,290,841,854,397,472,186,795,922,473,234,358,148,442,292,203,949,73,99,284
187,622,933,191,3,361,948,369,443,520,415,443,81,916,520,880,785,188,544,588
481,692,437,405,625,162,912,942,395,819,905,860,95,917,481,620,236,879,76,852
554,88,748,728,158,798,205,348,203,865,413,129,920,589,904,765,71,355,497,923
129,717,190,398,278,929,511,173,342,906,275,79,205,584,623,785,424,64,848,650
520,98,702,829,196,509,647,545,212,805,411,161,153,609,96,768,134,399,734,528
317,731,172,875,395,74,623,374,667,546,595,481,767,159,697,168,556,947,642,293
800,877,655,940,51,707,274,691,143,831,615,420,240,700,365,60,415,265,544,604
593,763,217,730,517,429,98,552,535,157,913,515,396,472,407,796,860,347,785,526
854,400,772,876,637,589,859,732,704,470,83,625,618,80,922,182,603,884,99,61
395,151,522,889,4,920,542,603,716,663,294,78,56,945,841,611,671,606,688,422
913,616,83,913,436,669,207,724,502,583,180,725,697,651,196,445,719,777,543,175
62,343,788,404,654,97,64,890,904,593,97,320,870,174,685,720,320,689,531,816
627,605,929,719,779,659,637,145,927,707,168,825,723,197,899,521,795,152,353,149
981,711,274,191,507,914,732,786,193,582,348,834,437,98,93,55,79,712,427,598
403,234,173,906,427,646,405,98,685,548,880,549,624,356,134,977,166,193,798,92
93,686,839,270,767,531,776,357,621,294,405,915,690,766,621,943,766,53,291,557
238,533,370,210,664,366,924,925,90,766,944,692,857,486,621,369,148,927,131,642
155,847,567,782,494,929,147,828,183,910,554,348,846,771,918,583,829,736,442,818
509,418,857,638,928,174,833,139,482,445,643,595,201,779,132,532,550,418,288,666
925,875,443,415,768,784,92,583,65,783,684,799,854,786,212,826,944,913,667,586
187,841,917,600,70,631,558,539,476,504,733,505,605,427,192,203,594,922,674,501
659,540,347,435,538,154,551,606,867,295,194,444,652,527,508,201,558,729,79,408
374,672,588,351,206,885,353,778,70,280,240,152,911,109,728,494,653,153,825,580
890,910,828,940,945,515,836,941,834,422,527,579,162,137,23,539,831,358,827,830
851,151,516,142,598,336,523,593,289,275,718,690,929,587,201,706,539,361,524,816
995,541,618,685,173,522,833,153,352,612,163,479,805,658,579,861,947,135,155,154
876,909,430,936,661,71,623,827,653,364,933,803,782,685,717,621,52,703,777,947
171,620,510,345,530,211,717,425,937,711,898,816,615,777,714,785,502,603,724,656
73,94,781,362,719,369,368,277,285,938,771,198,151,653,159,946,902,692,852,98
83,904,469,644,849,905,947,946,879,434,914,146,179,569,527,470,847,839,909,636
234,143,944,764,907,140,435,901,442,179,395,875,139,75,191,784,527,495,3,194
167,698,532,795,277,403,424,859,557,187,560,656,352,797,805,608,477,907,717,620
418,551,146,893,409,785,518,72,202,353,554,441,517,364,888,776,912,730,615,834
709,8,729,589,859,716,200,558,915,477,936,556,733,550,629,265,236,537,345,805
415,576,146,146,726,52,132,118,649,151,924,320,516,939,54,75,58,911,525,932
171,548,118,883,547,397,781,585,75,354,659,84,898,830,865,397,144,515,472,152
403,77,404,939,143,919,752,843,101,594,235,91,413,550,856,568,355,76,803,266
691,88,925,101,354,629,169,800,74,668,166,72,711,81,625,79,503,762,300,604
121,624,587,190,200,706,904,59,845,191,101,822,208,850,558,801,64,180,939,546
11,917,784,673,786,207,429,834,883,833,351,505,526,591,772,278,834,716,442,883
746,774,550,443,666,78,848,469,832,189,547,854,907,836,913,875,361,627,847,816
845,553,495,516,359,845,618,556,173,471,612,688,532,276,409,92,164,555,362,271
166,779,470,167,653,485,604,170,54,198,266,728,533,799,95,171,517,67,769,170
707,918,513,358,660,433,604,858,371,869,907,886,232,942,359,735,420,880,853,361
516,860,152,613,827,481,945,826,152,240,360,913,723,949,785,570,637,404,864,2
275,768,836,589,948,755,583,872,815,650,345,55,402,859,53,602,775,96,591,731
202,171,541,586,860,77,205,672,858,498,736,782,175,338,364,151,919,438,690,589
842,139,666,282,587,776,93,876,268,638,499,145,162,171,61,407,721,715,511,764
165,92,905,582,856,357,366,888,226,88,514,179,913,289,888,932,492,471,672,56
346,729,706,492,894,200,669,500,638,906,796,645,610,470,878,538,515,568,233,542
207,920,858,519,437,830,944,152,545,928,715,473,146,383,423,234,541,802,398,937
687,143,424,532,804,68,732,210,948,997,638,405,503,425,177,625,170,292,209,826
865,590,502,500,917,78,876,369,69,319,662,998,867,558,396,518,413,908,516,861
621,522,713,508,685,275,89,730,192,929,497,238,826,997,205,885,715,592,368,901
589,935,863,187,516,813,600,793,815,355,533,529,735,617,365,787,535,860,943,642
148,895,915,345,88,599,829,829,212,180,948,668,851,417,801,198,194,555,938,478
530,621,120,606,865,500,720,85,933,395,155,424,844,285,656,606,206,642,643,405
470,935,178,427,577,593,804,591,149,493,644,724,517,554,185,729,850,417,878,796
133,545,165,663,237,565,934,651,54,166,595,290,202,204,403,640,663,528,857,579
359,160,58,603,931,659,131,545,469,473,482,522,142,607,864,888,909,154,61,502
185,405,62,779,85,217,651,778,165,796,725,834,881,771,764,828,131,292,372,593
437,158,541,155,119,792,71,854,633,159,363,621,352,523,170,915,150,873,549,236
805,65,873,389,728,825,716,830,595,888,568,878,797,616,265,933,445,592,775,169
84,715,718,924,131,181,75,914,825,622,295,606,579,692,833,614,84,58,526,788
54,587,526,925,322,471,505,836,923,945,196,534,235,443,932,629,422,361,544,614
585,363,776,66,945,884,586,622,650,544,265,985,294,858,920,801,658,930,590,661
176,86,137,523,612,799,184,212,916,908,825,152,710,120,943,584,985,87,68,919
618,439,874,479,432,873,887,350,354,170,578,862,835,844,883,716,907,501,66,774
74,827,345,927,133,140,90,65,362,157,983,188,707,182,83,616,869,873,593,584
96,137,583,67,411,96,601,512,707,93,3,597,136,719,508,674,764,99,707,142
314,441,508,933,915,866,688,443,471,163,430,519,587,907,944,781,546,276,938,526
143,408,910,583,828,441,914,186,366,95,886,158,721,840,975,493,121,494,119,63
771,781,274,599,153,560,531,320,498,590,350,131,401,75,356,749,237,64,156,589
788,424,62,399,902,368,589,855,539,183,760,591,94,131,924,203,614,76,849,913
618,432,718,540,407,854,639,579,866,349,471,601,266,548,766,790,798,597,792,216
805,499,378,903,100,429,722,926,265,345,918,928,601,850,690,570,945,167,778,233
642,586,879,856,54,395,891,183,182,602,625,637,374,405,621,907,620,538,423,872
368,423,655,287,942,208,797,600,481,413,88,166,732,657,783,949,794,155,130,853
724,177,780,490,506,409,278,205,530,648,629,238,834,669,871,551,854,856,650,873
717,820,200,653,435,266,656,160,692,170,400,877,690,727,54,191,792,294,539,409
569,121,738,521,401,769,186,638,146,73,392,151,868,560,537,289,612,428,64,685
523,584,233,804,187,139,409,624,897,430,205,94,674,519,278,204,506,611,266,663
879,424,770,62,73,419,346,860,194,594,707,911,915,203,308,918,288,360,925,618
90,350,366,871,211,786,598,439,512,279,285,120,855,481,513,864,100,282,732,601
601,151,480,498,178,725,496,363,782,918,235,875,474,237,145,948,20,673,830,191
176,155,626,212,890,860,298,181,590,607,718,945,617,863,915,660,164,580,177,648
478,780,927,824,397,348,189,368,776,854,613,798,179,519,542,917,363,603,525,233
354,131,865,805,594,539,405,233,155,472,875,516,912,276,135,379,833,729,239,612
628,913,145,757,549,907,137,592,163,602,140,567,847,500,503,643,608,832,481,510
197,567,12,281,909,265,444,207,727,606,848,366,431,293,626,166,274,55,178,558
539,485,881,477,150,178,119,506,856,710,129,366,918,530,294,806,157,432,603,131
790,372,713,148,623,422,233,81,407,151,53,506,669,644,74,658,443,840,894,879
68,422,591,396,849,85,782,733,514,801,151,611,75,147,423,838,69,533,741,722
854,437,597,95,799,158,674,602,499,836,542,629,92,647,320,203,557,617,183,486
766,545,898,767,714,842,569,516,544,664,403,438,552,157,840,707,187,876,154,722
645,56,616,909,978,798,825,414,886,608,90,173,119,939,668,142,559,579,204,148
399,595,908,205,527,670,355,152,706,75,89,363,277,473,824,921,910,208,922,141
736,415,512,207,194,797,697,876,873,860,771,178,87,445,149,943,770,548,547,827
77,816,668,299,144,691,946,150,233,518,235,94,829,825,436,168,239,156,198,536
130,781,319,856,735,188,642,590,174,170,504,844,711,904,499,817,841,367,100,780
638,943,445,139,280,598,947,153,979,404,936,437,474,168,496,155,442,345,52,856
920,725,526,637,495,606,767,670,88,204,621,723,931,846,373,218,508,766,92,869
548,683,597,81,716,480,586,644,118,184,911,348,690,865,801,628,202,656,421,781
732,188,518,837,347,520,543,923,930,777,650,712,179,841,2,917,539,873,317,726
70,74,190,686,555,502,286,359,803,592,234,413,862,762,713,786,54,516,579,590
855,60,405,724,303,718,867,690,887,834,618,423,847,591,638,165,513,804,420,802
114,477,659,67,595,675,687,512,170,583,366,733,499,481,941,830,523,926,538,481
286,675,598,906,206,182,394,724,883,146,497,829,132,854,148,768,357,191,480,916
121,779,876,926,346,199,132,668,626,557,591,547,790,157,51,653,646,157,654,574
151,643,618,862,690,935,157,180,430,265,590,88,238,503,286,844,787,83,602,410
663,202,92,589,709,916,52,866,863,661,694,498,799,832,560,766,75,63,522,588
232,826,184,776,362,410,189,201,424,711,781,872,206,133,730,319,618,806,773,516
789,731,361,904,190,454,82,70,400,850,133,711,500,773,480,282,427,144,931,724
195,69,786,54,908,805,292,50,615,946,804,932,975,367,666,396,344,642,733,197
947,783,55,802,287,860,796,866,281,523,317,150,691,52,174,716,56,603,671,395
662,594,555,781,569,140,184,559,502,815,318,266,774,780,934,925,606,479,590,983
792,520,160,163,599,61,602,200,864,423,402,627,616,934,658,431,472,791,920,982
64,437,690,155,433,507,98,346,239,904,359,208,986,906,90,609,878,167,937,352
975,738,119,364,522,789,946,71,169,183,495,614,568,175,424,345,666,801,602,554
735,406,417,360,724,406,196,344,171,872,113,858,646,394,143,608,773,886,504,675
904,500,590,374,387,79,374,864,666,614,361,593,847,416,357,725,804,77,59,177
902,380,346,883,528,901,581,419,371,190,728,668,168,620,594,98,602,777,140,371
237,528,783,371,225,544,837,643,674,919,424,779,658,568,147,182,717,138,715,639
781,412,145,603,524,715,433,397,781,911,351,906,155,406,847,520,551,712,979,470
937,532,490,498,857,266,801,945,422,598,645,148,65,792,901,912,826,917,802,907
827,292,401,137,589,555,657,210,118,164,793,138,769,88,99,784,409,886,50,103
438,865,538,644,419,90,906,711,689,864,605,441,121,714,798,24,590,647,434,96
355,604,587,293,694,75,77,531,614,772,557,82,531,239,883,591,426,71,581,721
649,367,151,198,567,317,176,907,605,492,127,587,614,907,864,666,235,901,908,415
513,810,54,730,181,500,539,471,374,612,673,209,671,921,350,608,172,647,613,120
486,440,906,145,471,840,73,403,858,669,146,863,552,98,816,946,516,207,441,604
237,532,775,638,517,665,516,600,751,585,499,712,626,570,943,515,943,420,89,173
942,850,768,872,603,376,797,706,509,669,725,358,786,352,922,281,529,653,194,919
594,190,559,350,58,847,210,14,435,411,773,825,414,804,942,276,729,922,827,197
943,664,348,540,147,653,146,436,157,474,56,405,99,536,361,316,87,517,516,887
444,537,278,533,163,625,61,766,738,608,52,795,361,896,137,396,142,646,843,348
318,189,614,905,175,480,121,685,292,158,511,353,52,640,618,892,169,422,642,348
657,98,291,721,403,283,410,887,935,736,132,872,933,433,918,834,277,394,142,121
785,233,18,472,938,187,265,717,626,727,768,706,58,884,279,100,429,476,882,595
212,559,928,643,193,730,835,550,172,58,18,920,764,735,568,364,431,496,583,764
619,522,588,834,797,985,509,519,204,348,288,890,419,555,799,399,840,374,880,579
420,591,501,598,737,93,364,587,403,778,778,348,826,571,363,831,925,620,766,527
647,549,692,407,97,828,656,863,905,472,775,603,648,880,865,84,172,715,88,683
205,133,764,481,137,787,407,295,196,152,118,642,549,57,860,852,802,789,67,148
598,287,932,932,833,918,172,210,690,872,179,662,722,54,282,85,860,615,661,186
410,792,668,716,846,675,842,619,790,874,665,610,187,537,417,58,795,399,169,991
696,516,860,356,529,93,525,890,907,569,435,947,531,722,943,207,944,57,793,266
356,928,764,165,671,186,366,590,150,510,877,191,484,929,92,641,885,602,884,345
100,240,662,614,763,123,212,121,194,647,148,773,405,406,767,548,790,587,790,51
597,414,427,68,634,194,605,672,722,137,156,149,645,581,946,923,774,828,845,767
185,657,285,133,395,830,83,880,473,141,514,403,72,910,608,86,422,145,887,664
59,851,426,594,663,949,581,879,315,98,568,412,877,191,78,177,92,515,776,317
864,904,525,239,147,833,76,854,544,734,239,187,355,201,850,785,279,280,134,811
558,118,602,917,474,765,399,882,533,504,55,145,142,758,90,167,137,420,411,57
906,949,628,480,138,762,708,947,384,765,655,440,79,170,120,855,435,187,914,525
877,732,179,96,180,865,619,626,571,294,544,579,623,500,629,588,653,797,932,845
291,855,424,640,474,771,721,517,320,185,610,943,758,276,499,581,99,433,199,282
167,581,347,770,651,177,62,474,709,879,660,671,772,943,185,911,878,791,532,696
370,789,931,910,935,21,521,727,935,443,185,628,935,53,554,505,793,548,583,531
639,134,400,872,825,304,517,492,686,597,144,469,99,478,772,840,202,716,879,500
716,849,911,781,868,704,201,533,431,612,432,647,598,430,733,406,280,551,835,729
162,274,170,135,772,347,403,736,182,475,803,398,547,277,789,692,18,443,667,276
571,645,87,364,931,368,836,494,408,902,73,616,197,67,907,816,622,438,471,372
156,434,856,497,23,879,872,166,59,130,95,171,278,53,147,53,768,534,537,774
440,238,163,647,907,691,735,159,177,927,448,430,623,721,627,553,856,839,200,288
363,886,625,716,945,858,618,445,294,550,625,354,176,196,644,207,355,823,476,358
203,368,942,887,652,397,719,686,622,850,55,141,346,97,868,68,98,100,148,24
437,841,527,783,825,345,738,916,945,82,353,977,353,534,349,646,884,662,843,600
614,59,793,441,643,846,20,588,166,649,524,668,425,166,922,238,509,886,881,607
54,198,784,704,265,580,281,177,873,708,200,764,71,99,781,428,767,930,792,404
91,765,304,551,360,65,670,136,481,666,502,401,830,579,55,560,672,210,437,851
408,636,909,289,408,529,54,622,510,833,506,135,494,938,403,206,523,806,417,133
665,642,585,685,282,268,921,367,211,524,736,846,169,479,904,581,560,174,717,350
946,365,920,692,180,819,802,586,208,541,686,767,726,210,580,555,395,716,883,359
773,832,685,638,848,611,118,367,654,591,927,883,778,227,928,406,492,118,58,617
83,729,417,805,717,836,816,537,199,84,630,318,291,496,945,395,802,776,522,477
57,780,644,69,506,835,785,130,436,773,131,58,352,271,874,188,641,548,193,86
862,69,948,720,474,540,619,118,586,594,233,643,471,820,494,845,504,539,844,362
520,570,405,1,559,609,732,434,349,440,582,798,768,940,472,510,706,423,173,589
806,413,173,542,525,409,686,708,640,294,706,197,737,627,619,948,713,344,284,919
60,669,873,830,63,655,768,519,819,617,640,639,803,96,546,672,717,502,616,664
160,471,365,672,424,783,865,351,73,50,707,864,433,165,929,702,587,55,932,208
774,924,724,92,597,99,445,187,102,442,405,766,853,61,542,320,800,292,493,839
854,275,477,775,23,165,911,359,55,153,501,889,906,439,73,667,599,280,179,586
391,598,317,63,532,769,611,649,949,369,550,692,806,276,947,146,924,920,803,513
410,765,190,833,623,608,444,175,638,658,157,306,141,601,145,524,794,266,885,783
265,908,349,288,194,895,843,876,533,706,398,588,162,405,544,646,805,685,198,711
592,737,373,654,164,669,583,435,367,65,887,402,371,995,234,538,570,432,166,357
88,101,904,166,293,84,783,199,275,729,732,661,916,939,886,949,353,16,627,159
206,904,480,94,269,500,781,68,349,412,853,194,95,289,556,627,541,429,197,595
434,109,777,99,87,345,351,76,721,196,920,929,854,429,494,570,551,623,616,545
208,81,365,611,614,358,147,511,73,606,149,442,316,98,276,787,428,202,856,367
856,301,599,922,737,686,147,195,524,873,365,860,276,292,474,799,613,57,669,601
514,472,55,946,291,941,204,524,59,63,271,589,570,194,713,71,537,720,602,529
428,268,540,690,501,237,426,716,346,84,928,692,426,555,767,180,129,194,650,883
601,403,374,179,834,279,119,843,604,396,186,881,183,167,96,722,719,647,696,479
723,618,210,203,292,470,842,777,610,139,395,477,286,785,862,834,514,560,600,888
52,568,531,173,684,65,529,415,500,130,670,176,430,533,281,908,349,192,848,204
723,649,550,492,410,781,556,234,870,708,72,567,181,524,861,435,394,349,351,334
508,186,169,281,822,501,945,501,403,706,499,210,649,371,764,707,916,166,366,725
772,94,775,53,397,114,408,365,362,736,592,777,92,410,835,190,479,863,349,940
939,400,583,790,445,471,211,51,82,848,164,886,515,362,406,272,929,513,180,548
649,758,193,854,204,709,834,736,709,168,422,366,848,948,351,787,838,838,674,475
432,467,368,168,670,134,442,407,806,319,927,627,519,398,919,354,551,363,904,720
897,569,266,908,801,859,861,609,690,120,142,209,195,558,833,85,797,472,503,167
910,282,800,842,182,146,88,210,768,133,276,815,349,787,582,283,172,833,942,712
431,411,560,940,410,553,928,492,838,623,277,646,737,134,169,23,845,552,826,93";
        let (rows, ticket, tickets) = load_tickets(s);
        let (_, valid) = part1(&rows, &tickets);
        let p2 = part2(&rows, &valid, ticket);
        println!("{}", p2)
    }
}
